domain wildfire_single_action_xor_mdp {

	types {
		x_pos : object;
		y_pos : object;
	};

	pvariables {
		COST_CUTOUT            : {non-fluent, real, default =   -5 };
		COST_PUTOUT            : {non-fluent, real, default =  -10 };
		PENALTY_TARGET_BURN    : {non-fluent, real, default = -100};
		PENALTY_NONTARGET_BURN : {non-fluent, real, default =   -10 };
		PENALTY_XOR : {non-fluent, real, default = -100};

		NEIGHBOR(x_pos, y_pos, x_pos, y_pos) : { non-fluent, bool, default = false };

		TARGET(x_pos, y_pos) : { non-fluent, bool, default = false };

		burning(x_pos, y_pos)     : { state-fluent, bool, default = false };
		out-of-fuel(x_pos, y_pos) : { state-fluent, bool, default = false };
		code0 : {state-fluent, bool, default = false};
		code1 : {state-fluent, bool, default = false};

		put-out-xor : { action-fluent, bool, default = false };
		put-out-not-xor : { action-fluent, bool, default = false};

	};

	cpfs {
  	code0' = Bernoulli(0.5);
 	  code1' = Bernoulli(0.5);
		burning'(?x, ?y) =
			if (( put-out-xor ^ ((code0 + code1) == 1)) | (put-out-not-xor ^ ~((code0 + code1) == 1)))
				then false
            else if (~out-of-fuel(?x, ?y) ^ ~burning(?x, ?y))
              then [if (TARGET(?x, ?y) ^ ~exists_{?x2: x_pos, ?y2: y_pos} (NEIGHBOR(?x, ?y, ?x2, ?y2) ^ burning(?x2, ?y2)))
                    then false
                    else Bernoulli( 1.0 / (1.0 + exp[4.5 - (sum_{?x2: x_pos, ?y2: y_pos} (NEIGHBOR(?x, ?y, ?x2, ?y2) ^ burning(?x2, ?y2)))]) ) ]
			else
				burning(?x, ?y);

		out-of-fuel'(?x, ?y) = out-of-fuel(?x, ?y) | burning(?x,?y) ;
	};

	reward =
 	  [ COST_PUTOUT*(put-out-xor + put-out-not-xor)
 	  + [sum_{?x: x_pos, ?y: y_pos} [ PENALTY_TARGET_BURN*[ (burning(?x, ?y) | out-of-fuel(?x, ?y)) ^ TARGET(?x, ?y) ]]]
 	  + [sum_{?x: x_pos, ?y: y_pos} [ PENALTY_NONTARGET_BURN*[ burning(?x, ?y) ^ ~TARGET(?x, ?y) ]]]];

}
